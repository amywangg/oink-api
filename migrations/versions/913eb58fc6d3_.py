"""empty message

Revision ID: 913eb58fc6d3
Revises: 486d66821c4e
Create Date: 2020-11-08 12:37:16.131674

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '913eb58fc6d3'
down_revision = '486d66821c4e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('budget')
    op.drop_table('item')
    op.drop_table('purchase')
    op.drop_table('customer')

    op.create_table('customer',
                    sa.Column('id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('first_name', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=False),
                    sa.Column('last_name', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=True),
                    sa.Column('email', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='customer_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('purchase',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('purchase_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('customer_id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('total_amount', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('date', postgresql.TIMESTAMP(
                    ),   server_default=sa.func.current_timestamp(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customer.id'], name='purchase_customer_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='purchase_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('item',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('purchase_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('price', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('category', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('date', postgresql.TIMESTAMP(
                    ),   server_default=sa.func.current_timestamp(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['purchase_id'], ['purchase.id'], name='item_purchase_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='item_pkey')
                    )
    op.create_table('budget',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('customer_id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('budget', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('category', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('date', postgresql.TIMESTAMP(
                    ),  server_default=sa.func.current_timestamp(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customer.id'], name='budget_customer_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='budget_pkey')
                    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('purchase',
                    sa.Column('id', sa.INTEGER(), server_default=sa.text(
                        "nextval('purchase_id_seq'::regclass)"), autoincrement=True, nullable=False),
                    sa.Column('customer_id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('total_amount', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('date', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customer.id'], name='purchase_customer_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='purchase_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('customer',
                    sa.Column('id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('first_name', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=False),
                    sa.Column('last_name', sa.VARCHAR(length=50),
                              autoincrement=False, nullable=True),
                    sa.Column('email', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name='customer_pkey'),
                    postgresql_ignore_search_path=False
                    )
    op.create_table('item',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('purchase_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('price', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('category', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('date', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['purchase_id'], ['purchase.id'], name='item_purchase_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='item_pkey')
                    )
    op.create_table('budget',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('customer_id', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=False),
                    sa.Column('budget', postgresql.DOUBLE_PRECISION(
                        precision=53), autoincrement=False, nullable=False),
                    sa.Column('category', sa.VARCHAR(length=100),
                              autoincrement=False, nullable=True),
                    sa.Column('date', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_id'], ['customer.id'], name='budget_customer_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='budget_pkey')
                    )
    # ### end Alembic commands ###
